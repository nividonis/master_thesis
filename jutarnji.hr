# -*- coding: utf-8 -*-
import requests
from BeautifulSoup import BeautifulSoup
import nltk
from fuzzywuzzy import fuzz
import string
import funkcije
from gradovi import GRADOVI
from compiler.ast import flatten
import time
linkovi = []
svi_linkovi = []

def ucitaj_link(url):
    global svi_linkovi
    r = requests.get(url)
    r.encoding = 'utf-8'
    tekst = r.text
    soup = BeautifulSoup(tekst)
    svi_linkovi += soup.find("div", "span-6").findAll("a")    
    return svi_linkovi

ucitaj_link('http://www.jutarnji.hr/vijesti/')
ucitaj_link('http://www.jutarnji.hr/vijesti/hrvatska/')
ucitaj_link('http://www.jutarnji.hr/vijesti/zagreb/')
ucitaj_link('http://www.jutarnji.hr/vijesti/crna_kronika/')

for link in svi_linkovi:
    a = (link.get('href'))
    if "http://" not in a:
        a = "http://" + a
    if a not in linkovi:
        linkovi.append(a)

num = len(linkovi)
print "----------" + str(num) + "----------"

file = open("jutarnji.txt", "r")
stari_linkovi = []
for line in file:
    link = line.split(";")
    stari_linkovi.append(link[0])
file.close()

file2 = open("jutarnji.hr_bez_lokacije.txt", "r")
for line in file2:
    link = line.split(";")
    stari_linkovi.append(link[0])
file2.close()

new_file_list = [] 

for link in linkovi:
    if not link in stari_linkovi:
        file = open("jutarnji.txt", "a")
        r = requests.get(link)
        r.encoding = 'utf-8'
        tekst = r.text
        li = []
        soup = BeautifulSoup(tekst)
        if soup.find("h1") != None:
            naslov = soup.find("h1").getText()
            naslov = str(naslov)
            naslov2 = ""
            for word in naslov.split(" "):
                if word.isupper():
                    word = word.title()
                    naslov2 += word + " "
                else:
                    naslov2 += word + " "
            naslov = naslov2       

        if soup.find("div", "dr_article") != None:
            clanak = soup.find("div", "dr_article").findAll("p")
            datum = soup.find("div", "published span-3 last").getText()
            datum = funkcije.uredi_datum(datum)   
            cisti_clanak = funkcije.ocisti_clanak(clanak)
            li.append(link)
            li.extend(funkcije.nadji(GRADOVI,cisti_clanak))
            
            if len(li) < 2:
                cisti_clanak = naslov + " " + cisti_clanak
                li.extend(funkcije.nadji_grad_jf(GRADOVI,cisti_clanak))
                if len(li) >= 6:
                    li = li[:7]
                li.sort(key=lambda x: x[1])
                li.reverse()
                li = flatten(li)
                if len(li) > 7:
                    li = li[:7]

        if len(li) > 1:
            if len(li) == 3:
                konacno = funkcije.nadji_sve(li)
            
            if len(li) == 5:
                li1 = li[:3]
                odg1 = funkcije.funkcije.nadji_sve(li1)
         
                li2 = li
                li2.pop(1)
                li2.pop(1)
                odg2 = funkcije.nadji_sve(li2)

                lst = [odg1,odg2]
                if lst[0][2] > lst [1][2]:
                    konacno = lst[0]
                if lst[0][2] < lst [1][2]:
                    konacno = lst[1]
                if lst[0][2] == lst [1][2]:
                    konacno = lst[0]
                    konacno2 = lst[1]
                    konacno2 = ";".join(konacno2)                    
                    konacno2 = konacno2 + ";" + datum + "\n"
                    print konacno2
                    file.write(konacno2)

            if len(li) == 7:
                li1 = li[:3]
                odg1 = funkcije.nadji_sve(li1)
                
                li2 = li[:5]
                li2.pop(1)
                li2.pop(1)
                odg2 = funkcije.nadji_sve(li2)             
                
                li3 = li
                li3.pop(1)
                li3.pop(1)
                li3.pop(1)
                li3.pop(1)
                odg3 = funkcije.nadji_sve(li3)
                               
                start = 0
                lst = [odg1,odg2, odg3]
                
                lst.sort(key=lambda x: x[2])
                lst.reverse()
                if lst[0][2] > lst[1][2]:
                    konacno = lst[0]
                if lst[0][2] == lst[1][2]:
                    konacno = lst[0]
                    konacno2 = lst[1]
                    konacno2 = ";".join(konacno2)                    
                    konacno2 = konacno2 + ";" + datum + "\n"
                    print konacno2
                    file.write(konacno2)
            
            konacno = ";".join(konacno)                    
            konacno = konacno + ";" + datum + "\n"
            print konacno
            file.write(konacno)
            file.close()
            
        else:
            if len(li)>=1:
                file2 = open("jutarnji.hr_bez_lokacije.txt", "a")
                #konacno = ";".join(li)
                konacno = li[0] + ";" + datum + "\n"
                file2.write(konacno)
                file2.close()     
        print "Waiting..."   
        time.sleep(2)
 
    num-=1
    print "----------" + str(num) + "----------"
    print""
